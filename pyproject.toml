[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[project]
name = "agentic-retail-foundations"
version = "0.1.0"
description = "Code examples for Foundations of Agentic AI for Retail Book."
readme = "README.md"
requires-python = ">=3.10"
license = "MIT"
authors = [
  { name = "Fatih Nayebi", email = "f.nayebi@gmail.com" },
]
classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Operating System :: OS Independent",
    "Intended Audience :: Developers",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
# List your core runtime dependencies here
dependencies = [
    "marimo>=0.13.4",
    "pandas>=2.1.0",
    "matplotlib>=3.8.0",
    "seaborn>=0.13.0",
    "scikit-learn>=1.3.0",
    "openai>=1.77.0",
    "tiktoken>=0.5.1",
    "requests>=2.31.0",
    "beautifulsoup4>=4.12.2",
    "langchain>=0.0.335",
    "ipywidgets>=8.1.1",
    "ipykernel>=6.26.0",
    "nest_asyncio>=1.5.8",
    "pydantic>=2.4.2",
    "typing-extensions>=4.8.0",
    "typing_inspect>=0.9.0",
    "aiohttp>=3.9.0",
    "tenacity>=8.2.3",
    "sentence-transformers>=2.2.2",
    "unstructured>=0.10.29",
    "pdfminer.six>=20221105",
    "pymupdf>=1.23.7",
    "python-magic>=0.4.27",
    "python-multipart>=0.0.6",
    "fastapi>=0.104.1",
    "uvicorn>=0.24.0.post1",
    "httpx>=0.25.1",
    "sse-starlette>=1.6.1",
    "pydantic-settings>=2.1.0",
    "langserve>=0.0.30",
    "langsmith>=0.0.63",
    "altair>=5.5.0",
    "vega-datasets>=0.9.0",
    "pyarrow>=19.0.1",
    "tensorflow~=2.16.0",
    "opencv-python-headless>=4.9.0",
    "rdflib>=7.1.4",
    "SPARQLWrapper>=2.0",
    "dowhy>=0.11",
    "econml>=0.14",
    "doubleml>=0.9.3",
    "networkx>=3.4.2",
    "python-dotenv>=1.0.0",
    "psycopg2-binary>=2.9.9",
    "supabase>=2.0.0",
    "redis>=5.0",
]

[project.optional-dependencies]
# Development dependencies: linters, formatters, testing, docs
dev = [
    "ruff>=0.4.0",
    "black>=24.0.0",
    "isort>=5.0.0",
    "mypy>=1.8.0", 
    "pytest>=7.0",
    "pytest-cov>=4.0",
    "pytest-asyncio>=0.21.0",
    "coverage[toml]>=7.0",
    "pre-commit>=4.2.0",
    "uv>=0.1.20",
    "kafka-python>=2.0",
    "types-requests",
    "pandas-stubs",
    "types-tensorflow",
    "types-networkx",
    "types-python-jose",
    "types-passlib",
]

docs = [
    "mkdocs>=1.6.1",
    "mkdocs-material>=9.0",
    "mkdocstrings[python]>=0.18",
    "mkdocs-git-revision-date-localized-plugin>=1.4.5",
]

[project.urls]
Homepage = "https://github.com/gradient-divergence/agentic-retail-foundations"
Repository = "https://github.com/gradient-divergence/agentic-retail-foundations"

# --- Tool Configurations ---

[tool.setuptools.packages.find]
where = ["."]
include = ["agents*", "connectors*", "models*", "utils*", "config*", "environments*", "demos*", "notebooks*"]
exclude = ["tests*", "docs*", "qmd*"]

# === Black Configuration ===
[tool.black]
line-length = 150

# === Ruff Configuration ===
[tool.ruff]
target-version = "py310"
line-length = 150 # Match black

[tool.ruff.lint]
select = ["E", "F", "W", "C90", "UP", "I", "B", "T20"]
ignore = [
    "B007", # Allow unused loop control variables if explicitly named with underscore later
]

exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]

[tool.ruff.lint.per-file-ignores]
"notebooks/*" = [
    "E501",
    "C901",
    "F841",
    "B018",
]
"tests/*" = [
    "S101",
    "D100",
    "D101",
    "D102",
    "D103",
]
"__init__.py" = [
    "F401",
    "D104",
]
"tests/utils/test_openai_utils.py" = ["E501"]


[tool.ruff.lint.mccabe]
max-complexity = 12

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
exclude = [
    "build/",
    ".venv/",
    "notebooks/",
]

[[tool.mypy.overrides]]
module = [
    "scipy.*",
    "statsmodels.*",
    "sklearn.*",
    "dowhy.*",
    "econml.*",
    "doubleml.*",
    "supabase.*",
    "psycopg2.*",
    "SPARQLWrapper.*",
    "redis.*",
    "kafka.*",
    "graphviz.*",
    "pyspark.*",
    "shap.*",
]
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "notebooks.ethical_considerations_and_governance"
disable_error_code = ["name-defined", "no-redef"]

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --cov --cov-report=term-missing" 
testpaths = [
    "tests",
]
pythonpath = "."

[tool.coverage.run]
branch = true
source = ["agents", "connectors", "utils", "demos", "config", "environments"]

[tool.coverage.report]
show_missing = true
skip_covered = true
fail_under = 40 
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "@(abc\\.)?abstractmethod",
]

[tool.coverage.html]
directory = "htmlcov"
